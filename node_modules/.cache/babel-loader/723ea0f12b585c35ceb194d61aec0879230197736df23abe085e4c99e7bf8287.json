{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport songs_data from \"../data/songs_data.json\";\nconst songsReducer = () => {\n  return songs_data.songs;\n};\nconst selectedSongIdReducer = function () {\n  let selectedSongId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  if (action.type === \"SONG_SELECTED\") {\n    return action.payload.id;\n  }\n  if (action.type === \"SONG_SELECTED_BY_ID\") {\n    return action.payload;\n  }\n  return selectedSongId;\n};\nconst playerStateReducer = function () {\n  let playerState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  if (action.type === \"PLAYER_STATE_SELECTED\" && !action.payload) {\n    return (playerState + 1) % 2;\n  } else if (action.type === \"PLAYER_STATE_SELECTED\" && action.payload) {\n    return action.payload;\n  }\n  return playerState;\n};\nconst volumeReducer = function () {\n  let volume = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 100;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  if (action.type === \"SET_VOLUME\") {\n    return action.payload;\n  }\n  return volume;\n};\nconst durationReducer = function () {\n  let duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  if (action.type === \"SET_DURATION\") {\n    return action.payload;\n  }\n  return duration;\n};\nconst currentLocationReducer = function () {\n  let loc = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  if (action.type === \"SET_CURRENT_LOCATION\") {\n    return action.payload;\n  }\n  return loc;\n};\nexport default combineReducers({\n  songs: songsReducer,\n  selectedSongId: selectedSongIdReducer,\n  playerState: playerStateReducer,\n  volume: volumeReducer,\n  duration: durationReducer,\n  currentLocation: currentLocationReducer\n});","map":{"version":3,"names":["combineReducers","songs_data","songsReducer","songs","selectedSongIdReducer","selectedSongId","arguments","length","undefined","action","type","payload","id","playerStateReducer","playerState","volumeReducer","volume","durationReducer","duration","currentLocationReducer","loc","currentLocation"],"sources":["/Users/usmanq/AudioHub/src/reducers/index.js"],"sourcesContent":["import { combineReducers } from \"redux\";\nimport songs_data from \"../data/songs_data.json\";\n\nconst songsReducer = () => {\n    return songs_data.songs;\n};\n\nconst selectedSongIdReducer = (selectedSongId = 0, action) => {\n    if (action.type === \"SONG_SELECTED\") {\n        return action.payload.id;\n    }\n    if (action.type === \"SONG_SELECTED_BY_ID\") {\n        return action.payload;\n    }\n    return selectedSongId;\n};\n\nconst playerStateReducer = (playerState = 0, action) => {\n    if (action.type === \"PLAYER_STATE_SELECTED\" && !action.payload) {\n        return (playerState + 1) % 2;\n    } else if (action.type === \"PLAYER_STATE_SELECTED\" && action.payload) {\n        return action.payload;\n    }\n    return playerState;\n};\n\nconst volumeReducer = (volume = 100, action) => {\n    if (action.type === \"SET_VOLUME\") {\n        return action.payload;\n    }\n    return volume;\n};\n\nconst durationReducer = (duration = 0, action) => {\n    if (action.type === \"SET_DURATION\") {\n        return action.payload;\n    }\n    return duration;\n};\n\nconst currentLocationReducer = (loc = 0, action) => {\n    if (action.type === \"SET_CURRENT_LOCATION\") {\n        return action.payload;\n    }\n    return loc;\n};\n\nexport default combineReducers({\n    songs: songsReducer,\n    selectedSongId: selectedSongIdReducer,\n    playerState: playerStateReducer,\n    volume: volumeReducer,\n    duration: durationReducer,\n    currentLocation: currentLocationReducer,\n});\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,yBAAyB;AAEhD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACvB,OAAOD,UAAU,CAACE,KAAK;AAC3B,CAAC;AAED,MAAMC,qBAAqB,GAAG,SAAAA,CAAA,EAAgC;EAAA,IAA/BC,cAAc,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;EAAA,IAAEG,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACrD,IAAIC,MAAM,CAACC,IAAI,KAAK,eAAe,EAAE;IACjC,OAAOD,MAAM,CAACE,OAAO,CAACC,EAAE;EAC5B;EACA,IAAIH,MAAM,CAACC,IAAI,KAAK,qBAAqB,EAAE;IACvC,OAAOD,MAAM,CAACE,OAAO;EACzB;EACA,OAAON,cAAc;AACzB,CAAC;AAED,MAAMQ,kBAAkB,GAAG,SAAAA,CAAA,EAA6B;EAAA,IAA5BC,WAAW,GAAAR,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;EAAA,IAAEG,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC/C,IAAIC,MAAM,CAACC,IAAI,KAAK,uBAAuB,IAAI,CAACD,MAAM,CAACE,OAAO,EAAE;IAC5D,OAAO,CAACG,WAAW,GAAG,CAAC,IAAI,CAAC;EAChC,CAAC,MAAM,IAAIL,MAAM,CAACC,IAAI,KAAK,uBAAuB,IAAID,MAAM,CAACE,OAAO,EAAE;IAClE,OAAOF,MAAM,CAACE,OAAO;EACzB;EACA,OAAOG,WAAW;AACtB,CAAC;AAED,MAAMC,aAAa,GAAG,SAAAA,CAAA,EAA0B;EAAA,IAAzBC,MAAM,GAAAV,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,GAAG;EAAA,IAAEG,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACvC,IAAIC,MAAM,CAACC,IAAI,KAAK,YAAY,EAAE;IAC9B,OAAOD,MAAM,CAACE,OAAO;EACzB;EACA,OAAOK,MAAM;AACjB,CAAC;AAED,MAAMC,eAAe,GAAG,SAAAA,CAAA,EAA0B;EAAA,IAAzBC,QAAQ,GAAAZ,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;EAAA,IAAEG,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACzC,IAAIC,MAAM,CAACC,IAAI,KAAK,cAAc,EAAE;IAChC,OAAOD,MAAM,CAACE,OAAO;EACzB;EACA,OAAOO,QAAQ;AACnB,CAAC;AAED,MAAMC,sBAAsB,GAAG,SAAAA,CAAA,EAAqB;EAAA,IAApBC,GAAG,GAAAd,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;EAAA,IAAEG,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC3C,IAAIC,MAAM,CAACC,IAAI,KAAK,sBAAsB,EAAE;IACxC,OAAOD,MAAM,CAACE,OAAO;EACzB;EACA,OAAOS,GAAG;AACd,CAAC;AAED,eAAepB,eAAe,CAAC;EAC3BG,KAAK,EAAED,YAAY;EACnBG,cAAc,EAAED,qBAAqB;EACrCU,WAAW,EAAED,kBAAkB;EAC/BG,MAAM,EAAED,aAAa;EACrBG,QAAQ,EAAED,eAAe;EACzBI,eAAe,EAAEF;AACrB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}