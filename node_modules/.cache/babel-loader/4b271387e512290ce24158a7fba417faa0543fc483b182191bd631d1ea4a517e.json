{"ast":null,"code":"var _jsxFileName = \"/Users/saipalutla/Documents/GVSU/Winter 2023/CIS 658/AudioHub/src/components/SongItem.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./SongItem.css\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { selectSong } from \"../actions\";\nimport axios from \"axios\";\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SongItem = _ref => {\n  _s();\n  let {\n    song,\n    index,\n    selectSong,\n    selectedSongId,\n    playerState\n  } = _ref;\n  const [, setHovered] = useState(false);\n  const dispatch = useDispatch();\n  const selector = () => {\n    // function addToPlaylist(id) {\n    //     const token = localStorage.getItem('jwtToken');\n\n    //     try {\n    //         const response = axios.post('http://localhost:8000/addToPlaylist', {\n    //             token: token,\n    //             songId: id,\n    //         });\n\n    //         if (response.status === 200) {\n    //             toast.success('Song added to playlist!');\n    //             console.log('song added to playlist')\n    //         }\n    //         if (response.status === 400 || response.status === 401) {\n    //             console.log('haha error')\n    //         }\n\n    //     } catch (error) {\n    //         toast.error('Failed to add song to playlist!');\n    //         if (error.response.status === 400) {\n    //             //console.log(error.response.data.message)\n\n    //             //   setError(error.response.data.message)\n    //             return;\n    //         }\n\n    //     }\n    // }\n\n    function addToPlaylist(id) {\n      const token = localStorage.getItem('jwtToken');\n      return axios.post('http://localhost:8000/addToPlaylist', {\n        token: token,\n        songId: id\n      }).then(response => {\n        if (response.status === 200) {\n          toast.success('Song added to playlist');\n        }\n      }).catch(error => {\n        if (error.response.status === 400) {\n          console.log(error.response.data.message);\n        }\n        toast.error('Error adding song to playlist');\n      });\n    }\n    return /*#__PURE__*/_jsxDEV(\"a\", {\n      draggable: \"false\",\n      onClick: () => addToPlaylist(song._id),\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"24\",\n        height: \"24\",\n        viewBox: \"0 0 24 24\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          fill: \"currentColor\",\n          d: \"M19 11h-6V5c0-.55-.45-1-1-1s-1 .45-1 1v6H5c-.55 0-1 .45-1 1s.45 1 1 1h6v6c0 .55.45 1 1 1s1-.45 1-1v-6h6c.55 0 1-.45 1-1s-.45-1-1-1z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  };\n\n  // Set song as active\n  const now_selected = selectedSongId === song.id ? \"active\" : \"\";\n\n  // set the gif\n  const phaser = () => {\n    if (selectedSongId === song.id && playerState) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"index\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"\",\n          src: \"/playing.gif\",\n          id: \"focused\",\n          className: \"small-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"index\",\n        children: index + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 20\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `song-item`,\n    id: now_selected,\n    onMouseOver: () => setHovered(true),\n    onMouseLeave: () => setHovered(false),\n    onClick: () => {\n      selectSong(song);\n      dispatch({\n        type: \"PLAYER_STATE_SELECTED\",\n        payload: 1\n      });\n    },\n    children: [phaser(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"name\",\n      children: song.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"author\",\n      children: song.artist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selector\",\n      children: selector()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n_s(SongItem, \"BOh+8ZY4svMfbN84hHzuwJhKtCg=\", false, function () {\n  return [useDispatch];\n});\n_c = SongItem;\nconst mapStateToProps = state => {\n  return {\n    selectedSongId: state.selectedSongId,\n    playerState: state.playerState\n  };\n};\nexport default connect(mapStateToProps, {\n  selectSong\n})(SongItem);\nvar _c;\n$RefreshReg$(_c, \"SongItem\");","map":{"version":3,"names":["useState","connect","useDispatch","selectSong","axios","toast","jsxDEV","_jsxDEV","SongItem","_ref","_s","song","index","selectedSongId","playerState","setHovered","dispatch","selector","addToPlaylist","id","token","localStorage","getItem","post","songId","then","response","status","success","catch","error","console","log","data","message","draggable","onClick","_id","children","xmlns","width","height","viewBox","fill","d","fileName","_jsxFileName","lineNumber","columnNumber","now_selected","phaser","className","alt","src","onMouseOver","onMouseLeave","type","payload","title","artist","_c","mapStateToProps","state","$RefreshReg$"],"sources":["/Users/saipalutla/Documents/GVSU/Winter 2023/CIS 658/AudioHub/src/components/SongItem.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./SongItem.css\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { selectSong } from \"../actions\";\nimport axios from \"axios\";\nimport { toast } from 'react-toastify';\n\nconst SongItem = ({ song, index, selectSong, selectedSongId, playerState }) => {\n    const [, setHovered] = useState(false);\n    const dispatch = useDispatch();\n\n    const selector = () => {\n        // function addToPlaylist(id) {\n        //     const token = localStorage.getItem('jwtToken');\n\n        //     try {\n        //         const response = axios.post('http://localhost:8000/addToPlaylist', {\n        //             token: token,\n        //             songId: id,\n        //         });\n\n        //         if (response.status === 200) {\n        //             toast.success('Song added to playlist!');\n        //             console.log('song added to playlist')\n        //         }\n        //         if (response.status === 400 || response.status === 401) {\n        //             console.log('haha error')\n        //         }\n\n        //     } catch (error) {\n        //         toast.error('Failed to add song to playlist!');\n        //         if (error.response.status === 400) {\n        //             //console.log(error.response.data.message)\n\n        //             //   setError(error.response.data.message)\n        //             return;\n        //         }\n\n        //     }\n        // }\n\n\n        function addToPlaylist(id) {\n            const token = localStorage.getItem('jwtToken');\n    \n            return axios.post('http://localhost:8000/addToPlaylist', {\n                token: token,\n                songId: id,\n            })\n            .then(response => {\n                if (response.status === 200) {\n                    toast.success('Song added to playlist')\n                }\n            })\n            .catch(error => {\n                if (error.response.status === 400) {\n                    console.log(error.response.data.message)\n                }\n                toast.error('Error adding song to playlist')\n            });\n        }\n        return (\n            <a\n                draggable=\"false\"\n                onClick={() => addToPlaylist(song._id)}\n            >\n                <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"24\"\n                    height=\"24\"\n                    viewBox=\"0 0 24 24\"\n                >\n                    <path\n                        fill=\"currentColor\"\n                        d=\"M19 11h-6V5c0-.55-.45-1-1-1s-1 .45-1 1v6H5c-.55 0-1 .45-1 1s.45 1 1 1h6v6c0 .55.45 1 1 1s1-.45 1-1v-6h6c.55 0 1-.45 1-1s-.45-1-1-1z\"\n                    />\n                </svg>\n            </a>\n        );\n    };\n\n    // Set song as active\n    const now_selected = selectedSongId === song.id ? \"active\" : \"\";\n\n    // set the gif\n    const phaser = () => {\n        if (selectedSongId === song.id && playerState) {\n            return (\n                <div className=\"index\">\n                    <img\n                        alt=\"\"\n                        src=\"/playing.gif\"\n                        id=\"focused\"\n                        className=\"small-icon\"\n                    />\n                </div>\n            );\n        } else {\n            return <div className=\"index\">{index + 1}</div>;\n        }\n    };\n    return (\n        <div\n            className={`song-item`}\n            id={now_selected}\n            onMouseOver={() => setHovered(true)}\n            onMouseLeave={() => setHovered(false)}\n            onClick={() => {\n                selectSong(song);\n                dispatch({ type: \"PLAYER_STATE_SELECTED\", payload: 1 });\n            }}\n        >\n            {phaser()}\n            <div className=\"name\">{song.title}</div>\n            <div className=\"author\">{song.artist}</div>\n            <div className=\"selector\">{selector()}</div>\n\n\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedSongId: state.selectedSongId,\n        playerState: state.playerState,\n    };\n};\n\nexport default connect(mapStateToProps, { selectSong })(SongItem);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}